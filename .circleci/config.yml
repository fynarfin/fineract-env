version: 2.1
orbs:
  slack: circleci/slack@4.12.5
  helm: circleci/helm@2.0.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  mifos-orb: mifos/docker-image-availability-check-and-upgrade@1.0.0
jobs:
  build-and-host-engine:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - run: rm -f helm/fineract/Chart.lock helm/fineract/requirements.lock helm/fineract/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run:
          name: build-and-host-fin-engine
          environment:
            JIRA_STORY: ''
            JIRA_STORY_DIR: ''
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              PR_TITLE=$(curl -sSL "https://api.github.com/repos/openmf/$CIRCLE_PROJECT_REPONAME/pulls/$PR_NUMBER" | jq -r '.title')
              JIRA_STORY=-$(echo $PR_TITLE | cut -d "[" -f2 | cut -d "]" -f1 | tr '[A-Z]' '[a-z]')
              if [ -z "$JIRA_STORY" ]; then echo "Invalid PR title" && exit 1; else echo "Ticket NO: $JIRA_STORY" && JIRA_STORY_DIR=$(echo /jira-story-version); fi
              echo Charts will save in https://fynarfin.io/images$JIRA_STORY_DIR
            fi
            sed -i "5s/.*/version: 0.0.0-SNAPSHOT$JIRA_STORY/" helm/fineract/Chart.yaml
            helm dep up helm/fineract
            helm package helm/fineract
            helm repo index .
            echo "$CERT_FILE" | base64 --decode > b64encoded.pem
            chmod 400 b64encoded.pem
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/fin-engine-0.0.0-SNAPSHOT$JIRA_STORY
            scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml fin-engine-0.0.0-SNAPSHOT$JIRA_STORY.tgz ec2-user@13.233.68.128:~/
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo cp -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/fin-engine-0.0.0-SNAPSHOT$JIRA_STORY index.yaml fin-engine-0.0.0-SNAPSHOT$JIRA_STORY.tgz
  upgrade-fin-engine-helm-chart:
    docker:
      - image: cimg/python:3.10
    environment:
      TERM: dumb
    steps:
      - mifos-orb/docker-image-availability-check-and-upgrade:
          namespace: fineract
          chart-base-url: https://fynarfin.io/images
          chart-name: fin-engine
          chart-version: 0.0.0
          #          chart: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin/ph-ee-g2psandbox-fynarfin-0.2.0.tgz"
          release-name: fineract
          #          add-repo: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin"
          cluster-name: "sit"
          aws-region: "$REGION"
          service-file-path: https://raw.githubusercontent.com/openMF/ph-ee-env-labs/master/.circleci/services.txt
  
  
  
  
  
  
  

  build_and_deploy:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: sudo pip install awscli
      - run:
          name: Configure AWS Credentials
          command: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && aws configure set region $REGION
      - run:
          name: Install kubectl
          command: |
            sudo curl --silent --location -o /usr/local/bin/kubectl “https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl”
            sudo chmod +x /usr/local/bin/kubectl
      - run:
          name: Authenticate kubectl with EKS Cluster
          command: aws eks --region $REGION update-kubeconfig --name sit
      - run:
          name: Deploy Helm Chart
          command: |
            curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
            sudo apt-get install apt-transport-https --yes
            echo “deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main” | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
            #helm install
            sudo apt-get update
            sudo apt-get install helm
            helm dep up helm/fineract
            helm upgrade -f helm/fineract/values.yaml fineract helm/fineract  --install --create-namespace --namespace fineract1
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build_and_deploy:
          context:
            - AWS
            - slack
