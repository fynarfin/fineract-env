fineract:
  enabled: true
  db: fineract-mysql
  DFSPIDS: "rhino,gorilla,pluto,venus,jupiter,wakanda"
  SPRING_PROFILES_ACTIVE: "bb"
  image: "419830066942.dkr.ecr.ap-south-1.amazonaws.com/fineract:mysqllatest"
  spec: 
    template:
      spec:
        containers:
          env:
            FINERACT_DEFAULT_TENANTDB_IDENTIFIER: "gorilla"
            FINERACT_DEFAULT_TENANTDB_NAME: "gorilla"
            FINERACT_DEFAULT_TENANTDB_HOSTNAME: "fineract-mysql"
            FINERACT_DEFAULT_TENANTDB_PORT: "3306"
            FINERACT_HIKARI_DRIVER_CLASS_NAME: org.mariadb.jdbc.Driver
            FINERACT_HIKARI_JDBC_URL: jdbc:mariadb://fineract-mysql:3306/fineract_tenants
            FINERACT_SERVER_PORT: 8443
  preStopScript: 'mysql -h fineract-mysql -u root -p4ET6ywqlGt fineract_tenants -e "INSERT IGNORE INTO tenant_server_connections (id, schema_server, schema_name, schema_server_port, schema_username, schema_password, auto_update, pool_initial_size, pool_validation_interval, pool_remove_abandoned, pool_remove_abandoned_timeout, pool_log_abandoned, pool_abandon_when_percentage_full, pool_test_on_borrow, pool_max_active, pool_min_idle, pool_max_idle, pool_suspect_timeout, pool_time_between_eviction_runs_millis, pool_min_evictable_idle_time_millis, schema_connection_parameters, readonly_schema_server, readonly_schema_name, readonly_schema_server_port, readonly_schema_username, readonly_schema_password, readonly_schema_connection_parameters) VALUES (1, \"fineract-mysql\", \"gorilla\", 3306, \"mifos\", \"password\", 1, 5, 30000, 1, 60, 1, 50, 1, 40, 20, 10, 60, 34000, 60000, \"serverTimezone=UTC&useLegacyDatetimeCode=false&sessionVariables=time_zone=\\\"-00:00\\\"\", NULL, NULL, NULL, NULL, NULL, NULL),(2, \"fineract-mysql\", \"rhino\", 3306, \"mifos\", \"password\", 1, 5, 30000, 1, 60, 1, 50, 1, 40, 20, 10, 60, 34000, 60000, \"serverTimezone=UTC&useLegacyDatetimeCode=false&sessionVariables=time_zone=\\\"-00:00\\\"\", NULL, NULL, NULL, NULL, NULL, NULL),(3, \"fineract-mysql\", \"pluto\", 3306, \"mifos\", \"password\", 1, 5, 30000, 1, 60, 1, 50, 1, 40, 20, 10, 60, 34000, 60000, \"serverTimezone=UTC&useLegacyDatetimeCode=false&sessionVariables=time_zone=\\\"-00:00\\\"\", NULL, NULL, NULL, NULL, NULL, NULL),(4, \"fineract-mysql\", \"venus\", 3306, \"mifos\", \"password\", 1, 5, 30000, 1, 60, 1, 50, 1, 40, 20, 10, 60, 34000, 60000, \"serverTimezone=UTC&useLegacyDatetimeCode=false&sessionVariables=time_zone=\\\"-00:00\\\"\", NULL, NULL, NULL, NULL, NULL, NULL),(5, \"fineract-mysql\", \"jupiter\", 3306, \"mifos\", \"password\", 1, 5, 30000, 1, 60, 1, 50, 1, 40, 20, 10, 60, 34000, 60000, \"serverTimezone=UTC&useLegacyDatetimeCode=false&sessionVariables=time_zone=\\\"-00:00\\\"\", NULL, NULL, NULL, NULL, NULL, NULL),(6, \"fineract-mysql\", \"wakanda\", 3306, \"mifos\", \"password\", 1, 5, 30000, 1, 60, 1, 50, 1, 40, 20, 10, 60, 34000, 60000, \"serverTimezone=UTC&useLegacyDatetimeCode=false&sessionVariables=time_zone=\\\"-00:00\\\"\", NULL, NULL, NULL, NULL, NULL, NULL)" && mysql -h fineract-mysql -u root -p4ET6ywqlGt fineract_tenants -e "INSERT IGNORE INTO tenants (id, identifier, name, timezone_id, country_id, joined_date, created_date, lastmodified_date, oltp_id, report_id) VALUES (1, \"gorilla\", \"gorilla\", \"Asia/Kolkata\", NULL, NULL, NULL, NULL, 1, 1),(2, \"rhino\", \"rhino\", \"Asia/Kolkata\", NULL, NULL, NULL, NULL, 2, 2),(3, \"pluto\", \"pluto\", \"Asia/Kolkata\", NULL, NULL, NULL, NULL, 3, 3),(4, \"venus\", \"venus\", \"Asia/Kolkata\", NULL, NULL, NULL, NULL, 4, 4),(5, \"jupiter\", \"jupiter\", \"Asia/Kolkata\", NULL, NULL, NULL, NULL, 5, 5),(6, \"wakanda\", \"wakanda\", \"Asia/Kolkata\", NULL, NULL, NULL, NULL, 6, 6)";'
  ingress:
    enabled: true
    hostname: "fynams.sandbox.fynarfin.io"
    path: "/"
    wildcardhostname: "*.sandbox.fynarfin.io"
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"  
  resources:
    limits:
      cpu: "1000m"
      memory: "2Gi"
    requests:
      cpu: "200m"
      memory: "0.5Gi"
  deployment:
    extraEnvs:
      - name: "FINERACT_SECURITY_BASICAUTH_ENABLED"
        value: 'true'
      - name: "FINERACT_SECURITY_OAUTH_ENABLED"
        value: 'false'

communityapp:
  enabled: true
  lookforservice: true
  image: "419830066942.dkr.ecr.ap-south-1.amazonaws.com/community-app:latest"
  ingress:
    enabled: true
    hostname: "communityapp.sandbox.fynarfin.io"
    path: "/"
    wildcardhostname: "communityapp.sandbox.fynarfin.io"
    annotations:
      kubernetes.io/ingress.class: "nginx"
  resources:
    limits:
      cpu: "500m"
      memory: "1Gi"
    requests:
      cpu: "200m"
      memory: "0.5Gi"

webapp:
  image: "419830066942.dkr.ecr.ap-south-1.amazonaws.com/fineract/phee-ns/web-app:latest"
  ingress:
    enabled: false
    hostname: ""
    path: "/web"
    annotations:
      kubernetes.io/ingress.class: "nginx"
  resources:
    limits:
      cpu: "500m"
      memory: "1Gi"
    requests:
      cpu: "200m"
      memory: "0.5Gi" 

selfservice:
  image: "419830066942.dkr.ecr.ap-south-1.amazonaws.com/fineract/phee-ns/web-self-service-app:latest"
  ingress:
    enabled: false
    hostname: ""
    path: "/self"
    annotations: {}

mysql:
  fullnameOverride: fineract-mysql
  enabled: false
  image:
    tag: "10.5.16-debian-11-r22"
    debug: true
  auth:
    username: "mifos"
    password: "password"
    rootPassword: "4ET6ywqlGt"
  initdbScripts:
    setup.sql: |-
      # create databases
      CREATE DATABASE IF NOT EXISTS `fineract_tenants`;
      CREATE DATABASE IF NOT EXISTS `gorilla`;
      CREATE DATABASE IF NOT EXISTS `rhino`;
      CREATE DATABASE IF NOT EXISTS `wakanda`;
      CREATE DATABASE IF NOT EXISTS `pluto`;
      CREATE DATABASE IF NOT EXISTS `venus`;
      CREATE DATABASE IF NOT EXISTS `jupiter`;
      # create root user and grant rights
      GRANT ALL ON *.* TO 'root'@'%';
      GRANT ALL PRIVILEGES ON `fineract_tenants`.* TO 'mifos';
      GRANT ALL PRIVILEGES ON `gorilla`.* TO 'mifos';
      GRANT ALL PRIVILEGES ON `rhino`.* TO 'mifos';
      GRANT ALL PRIVILEGES ON `wakanda`.* TO 'mifos';
      GRANT ALL PRIVILEGES ON `pluto`.* TO 'mifos';
      GRANT ALL PRIVILEGES ON `venus`.* TO 'mifos';
      GRANT ALL PRIVILEGES ON `jupiter`.* TO 'mifos';
  primary:
    resources:
      requests:
        memory: "0.5Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"

wildcardhostname: "*.sandbox.fynarfin.io"

tls: ""  
