# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if .Values.communityapp.enabled }}
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mifoscommunity
  name: mifoscommunity
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 80
  selector:
    app: mifoscommunity
    tier: frontend
  type: LoadBalancer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mifoscommunity
  namespace: {{ .Values.namespace }}
  labels:
    app: mifoscommunity
spec:
  selector:
    matchLabels:
      app: mifoscommunity
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mifoscommunity
        tier: frontend
    spec:
      initContainers:
        - name: init-myservice
          image: busybox:1.28
          command: ['sh', '-c', 'echo -e "Checking for the availability of Fineract server deployment"; while ! nc -z "fineractserver" 8443; do sleep 1; printf "-"; done; echo -e " >> Fineract server has started";']
      containers:
      - name: mifoscommunity
        image: "{{ .Values.communityapp.image }}"
        resources:
          limits:
            cpu: "{{ .Values.communityapp.resources.limits.cpu }}"
            memory: "{{ .Values.communityapp.resources.limits.memory }}"
          requests:
            cpu: "{{ .Values.communityapp.resources.requests.cpu }}"
            memory: "{{ .Values.communityapp.resources.requests.memory}}"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 90
          periodSeconds: 1
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 90
          periodSeconds: 1
        ports:
        - containerPort: 80
          name: mifoscommunity
---
{{- if .Values.communityapp.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mifoscommunity
  namespace: "{{ .Values.namespace }}"
  annotations:
{{- if .Values.communityapp.ingress.annotations }}
{{ toYaml .Values.communityapp.ingress.annotations | indent 4 }}
{{- end }}
spec:
  rules:
    - host: "{{ .Values.communityapp.ingress.hostname }}"
      http:
        paths:
          - path: "{{ .Values.communityapp.ingress.path }}"
            pathType: Prefix
            backend:
              service:
                name: "{{ .Values.communityapp.ingress.backend.service.name }}"
                port: 
                  number: 9090
  tls:
    - hosts:
        - "{{ .Values.wildcardhostname }}"
      secretName: "{{ .Values.tls }}"
{{- end }}
{{- end}}
